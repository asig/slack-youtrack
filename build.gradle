// Copyright (c) 2014 Fractal Labs Ltd. All rights reserved.

import org.apache.tools.ant.filters.ReplaceTokens

apply plugin: 'java'
apply plugin: 'distribution'
apply plugin: 'war'

repositories {
    mavenCentral();
}


dependencies {
    compile 'ch.qos.logback:logback-classic:1.1.2'
    compile 'org.slf4j:jcl-over-slf4j:1.7.6'
    compile 'org.glassfish.jersey.core:jersey-client:2.10.1'
    compile 'org.apache.httpcomponents:fluent-hc:4.3.5'
    compile 'commons-io:commons-io:2.4'
    compile 'commons-configuration:commons-configuration:1.10'
    compile 'org.mapdb:mapdb:1.0.6'
    compile 'com.google.guava:guava:17.0'

    testCompile 'junit:junit:4.11'
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile 'com.github.rholder:snowball-stemmer:1.3.0.581.1'

    providedCompile 'javax.servlet:servlet-api:2.4'
}

//for Ant filter
def props = new Properties()
file("src/main/config/${env}.properties").withInputStream {
    props.load(it);

    // Populate token from command line params
    props.put("SLACK_AUTH_TOKEN", "${slackAuthToken}".toString());
}

// NOTE(asigner): Remember we're *not* declarative anymore... This must come after the dependencies call
distributions {
    main {
        baseName = 'slackyoutrack'
        contents {
            filesMatching ('**/*.sh') {
                filter(ReplaceTokens, tokens: props)
            }
            filesMatching ('**/*.properties') {
                filter(ReplaceTokens, tokens: props)
            }
            into('lib') {
                from project.configurations.runtime.files
                from jar.outputs.files
            }
        }
    }
}

distTar {
    compression = org.gradle.api.tasks.bundling.Compression.GZIP

    outputs.upToDateWhen { false } // TODO(asigner): Really necessary?
}

